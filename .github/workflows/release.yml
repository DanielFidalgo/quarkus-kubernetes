name: Release

on:
  release:
    types: [published]

env:
  RELEASE_REVISION: "${{ github.event.release.tag_name }}"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-west-2
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  KUBE_NAMESPACE: serverless
  ECR_REPOSITORY: ${{ github.event.repository.name }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    environment:
      name: prod
    steps:
          - name: Cancel Previous Runs
            uses: styfle/cancel-workflow-action@0.4.1
            with:
              access_token: ${{ github.token }}

          - name: cache layers
            uses: actions/cache@v2
            with:
              path: |
                ~/.m2
                ~/m2
              key: ${{ runner.os }}-single-buildx-${{ github.sha }}
              restore-keys: |
                ${{ runner.os }}-single-buildx

          - name: Checkout
            uses: actions/checkout@v2
            with:
              ref: ${{ github.event.release.head.sha }}

          - name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v1
            with:
              aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
              aws-region: ${{ env.AWS_REGION }}

          - name: Login to Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v1

          - name: Build
            run: |
              ./mvnw clean package -Pnative -Dquarkus.container-image.registry=${{ steps.login-ecr.outputs.registry }} \
              -Dquarkus.container-image.name=${{ env.ECR_REPOSITORY }} \
              -Dquarkus.container-image.tag=${{ env.RELEASE_REVISION }} \
              -Dquarkus.container-image.group="" \
              -Dquarkus.container-image.build=true \
              -Dquarkus.container-image.push=true \
              -Dquarkus.kubernetes.namespace=${{ env.KUBE_NAMESPACE }} \
              -Dquarkus.kubernetes.annotations.CapacityProvisioned="0.25vCPU 0.5GB" \
              -Dquarkus.http.port=4040 \
              -Dquarkus.native.container-build=true


          - name: delete old Kubernetes deployment
            uses: kodermax/kubectl-aws-eks@master
            continue-on-error: true
            with:
              args: delete -n ${{ env.KUBE_NAMESPACE }} deployment ${{ github.event.repository.name }}

          - name: Apply Kubernetes deployment
            uses: kodermax/kubectl-aws-eks@master
            env:
              DEPLOYMENT: target/kubernetes/kubernetes.yml
            with:
              args: apply -f $DEPLOYMENT
#
#          - name: run image
#            uses: kodermax/kubectl-aws-eks@master
#            env:
#              RELEASE_IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.RELEASE_REVISION }}
#            with:
#              args: run -i ${{ github.event.repository.name }} --image=$RELEASE_IMAGE